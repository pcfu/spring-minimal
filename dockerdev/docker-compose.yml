services:
  app: &app
    profiles:
      - app
    build:
      context: .
      dockerfile: Dockerfile
      args:
        PROJECT_NAME: ${COMPOSE_PROJECT_NAME}
        BASE_IMAGE: ${BASE_IMAGE}
        RELEASE: ${RELEASE}
        JAVA_VERSION: ${JAVA_VERSION}
    image: ${COMPOSE_PROJECT_NAME}:${BASE_IMAGE}-${RELEASE}
    tmpfs:
      - /run
      - /tmp

  backend: &backend
    <<: *app
    container_name: ${COMPOSE_PROJECT_NAME}
    stdin_open: true
    tty: true
    volumes:
      - ..:/${COMPOSE_PROJECT_NAME}:cached
      - gradle:/home/spring/.gradle:delegated
    ports:
      - 8080:8080
      - 35729:35729

  cli:
    <<: *backend
    command:
      - /bin/sh
      - -c
      - |
        usermod --uid ${USERID:-1000} spring
        groupmod --gid ${GROUPID:-1000} spring
        su spring -P -c bash

  server:
    <<: *backend
    profiles:
      - full
    command:
      - /bin/sh
      - -c
      - |
        usermod --uid ${USERID:-1000} spring
        groupmod --gid ${GROUPID:-1000} spring
        su spring -P -c "dockerdev/run-server.sh"

  postgres:
    profiles:
      - support
    image: postgres:16.3
    container_name: postgres
    hostname: postgres
    volumes:
      - ${COMPOSE_PROJECT_NAME}_postgres:/var/lib/postgresql/data
    environment:
      PSQL_HISTFILE: /root/log/.psql_history
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
    ports:
      - 5432:5432


volumes:
  gradle:
    name: ${COMPOSE_PROJECT_NAME}_gradle
  postgres:
    name: ${COMPOSE_PROJECT_NAME}_postgres
